DROP TABLE IF EXISTS netflix;

CREATE TABLE netflix (
    show_id VARCHAR(5),
    typeof VARCHAR(10),
    title VARCHAR(250),
    director VARCHAR(550),
    casts VARCHAR(1050),
    country VARCHAR(550),
    date_added VARCHAR(55),
    release_year INT,
    rating VARCHAR(15),
    duration VARCHAR(150),
    listed_in VARCHAR(250),
    description VARCHAR(550)
);

-- Replace 'C:/path/to/your/netflix.csv' with the actual path to your CSV file
COPY netflix from 'C:\Program Files\PostgreSQL\16\data\netflix.csv' DELIMITER ',' CSV HEADER;

SELECT * FROM netflix;

--Count number of movies and tv shows
select 
typeof,
count (*) as total_count
from netflix
group by typeof;

--Find the most common rating for movies and tvshows
SELECT 
    typeof,  
    rating, 
    COUNT(*) AS total_count
FROM netflix
GROUP BY typeof, rating 
ORDER BY total_count DESC;

--List all movies in 2020
SELECT title
FROM netflix
WHERE release_year = 2020;

--Find the country which has the most content on netflix
SELECT
    unnest(string_to_array(country, ',')) AS new_country, --takes comma seperated countries into individual countries within one cell each
    COUNT(show_id) AS total_count --counts the number of shows in each country
FROM
    netflix
GROUP BY
    1 --this groups the first column that is new_country
ORDER BY
    2 DESC -- this sorts the second column
LIMIT 5;

--Find the movie with the longest duration
SELECT *
FROM netflix
WHERE duration = (SELECT MAX(duration) FROM netflix);

--Find content added in the last 5 years
SELECT
*
FROM netflix
WHERE TO_DATE(date_added, 'Month DD, YYYY') >= CURRENT_DATE - INTERVAL '5 years'; --Here we create a query that allows us to capsulate the interval time

--Find all content by Rajiv Chilaka
SELECT *
FROM netflix
WHERE director LIKE '%Rajiv Chilaka%';

--List all tv shows with more than 5 seasons
SELECT *
FROM netflix
WHERE 
	typeof = 'TV Show'
	AND
	SPLIT_PART(duration, ' ', 1)::INT > 5; --Here we use split_part to split the duration seperating it into the number and character values and then we use a delimiter of '{blank}' while extracting only the 1rst part of the entire entry. After extracting the first part we compare it to 5

--Count the number of content items under each genre
select
unnest(string_to_array(listed_in,','))as genre,
count (*) as total_content
from netflix
group by 1;

--Find the year and the average content generated by India and return the top 5 entries
SELECT 
	country,
	release_year,
	COUNT(show_id) as total_release,
	ROUND(
		COUNT(show_id)::numeric/
								(SELECT COUNT(show_id) FROM netflix WHERE country = 'India')::numeric * 100 --Percentage count
		,2
		)
		as avg_release
FROM netflix
WHERE country = 'India' 
GROUP BY country, 2
ORDER BY avg_release DESC 
LIMIT 5;

--List all movies that are documentaries
SELECT *
from netflix
where listed_in like '%Documentaries%';

--Find all content without a director
SELECT *
from netflix
where director IS NULL;

--Find all the movies in which Salman Khan has appeared in the last 10 years
SELECT *
from netflix
where casts like '%Salman Khan%'
AND
release_year > EXTRACT(Year from Current_date)-10;

--Find the top 10 actors who have appeared in the highest number of movies produced in India
SELECT 
	UNNEST(STRING_TO_ARRAY(casts, ',')) as actor,
	COUNT(*)
FROM netflix
WHERE country = 'India'
GROUP BY 1
ORDER BY 2 DESC
LIMIT 10;

--Categorize the content based on the presence of the keywords 'kill' and 'violence' in 
--the description field. Label content containing these keywords as 'Bad' and all other 
--content as 'Good'. Count how many items fall into each category.


SELECT 
    category,
	typeof,
    COUNT(*) AS content_count
FROM (
    SELECT 
		*,
        CASE 
            WHEN description LIKE '%kill%' OR description LIKE '%violence%' THEN 'Bad'
            ELSE 'Good'
        END AS category
    FROM netflix
) AS categorized_content
GROUP BY 1,2
ORDER BY 2

	  




	  